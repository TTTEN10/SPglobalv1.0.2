version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: safepsy-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: safepsy_password
      MONGO_INITDB_DATABASE: safepsy
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - safepsy-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: safepsy-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - safepsy-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: safepsy-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://admin:safepsy_password@mongodb:27017/safepsy?authSource=admin
      REDIS_URL: redis://redis:6379
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - backend_logs:/app/logs
      - backend_uploads:/app/uploads
    networks:
      - safepsy-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: safepsy-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - safepsy-network

  # AI Chatbot
  ai-chatbot:
    build:
      context: ./ai-chatbot
      dockerfile: Dockerfile
    container_name: safepsy-ai-chatbot
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      BACKEND_URL: http://backend:3000
    ports:
      - "3001:3001"
    depends_on:
      - backend
    volumes:
      - chatbot_logs:/app/logs
      - chatbot_models:/app/models
    networks:
      - safepsy-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: safepsy-nginx
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
      - ai-chatbot
    networks:
      - safepsy-network

volumes:
  mongodb_data:
  redis_data:
  backend_logs:
  backend_uploads:
  chatbot_logs:
  chatbot_models:

networks:
  safepsy-network:
    driver: bridge
