version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: safepsy-mongodb-staging
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: safepsy_staging_password
      MONGO_INITDB_DATABASE: safepsy_staging
    ports:
      - "27018:27017"
    volumes:
      - mongodb_staging_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - safepsy-staging-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: safepsy-redis-staging
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_staging_data:/data
    networks:
      - safepsy-staging-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: safepsy-backend-staging
    restart: unless-stopped
    environment:
      NODE_ENV: staging
      PORT: 3000
      MONGODB_URI: mongodb://admin:safepsy_staging_password@mongodb:27017/safepsy_staging?authSource=admin
      REDIS_URL: redis://redis:6379
    ports:
      - "3002:3000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - backend_staging_logs:/app/logs
      - backend_staging_uploads:/app/uploads
    networks:
      - safepsy-staging-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: safepsy-frontend-staging
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - safepsy-staging-network

  # AI Chatbot
  ai-chatbot:
    build:
      context: ./ai-chatbot
      dockerfile: Dockerfile
    container_name: safepsy-ai-chatbot-staging
    restart: unless-stopped
    environment:
      NODE_ENV: staging
      PORT: 3001
      BACKEND_URL: http://backend:3000
    ports:
      - "3003:3001"
    depends_on:
      - backend
    volumes:
      - chatbot_staging_logs:/app/logs
      - chatbot_staging_models:/app/models
    networks:
      - safepsy-staging-network

volumes:
  mongodb_staging_data:
  redis_staging_data:
  backend_staging_logs:
  backend_staging_uploads:
  chatbot_staging_logs:
  chatbot_staging_models:

networks:
  safepsy-staging-network:
    driver: bridge
