name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          package-lock.json
          frontend/package-lock.json
          backend/package-lock.json
    
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci
        cd ../backend && npm ci
    
    - name: Lint frontend
      run: cd frontend && npm run lint
    
    - name: Lint backend
      run: cd backend && npm run lint
    
    - name: Type check frontend
      run: cd frontend && npm run typecheck
    
    - name: Type check backend
      run: cd backend && npm run typecheck
    
    - name: Test frontend
      run: cd frontend && npm run test -- --coverage
    
    - name: Test backend
      run: cd backend && npm run test -- --coverage
    
    - name: Build frontend
      run: cd frontend && npm run build
    
    - name: Build backend
      run: cd backend && npm run build

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/safepsy-landing:latest
          ${{ secrets.DOCKER_USERNAME }}/safepsy-landing:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deployment would happen here"
        echo "Configure your deployment target (e.g., AWS, DigitalOcean, etc.)"
